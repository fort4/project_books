<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fort4.mapper.BookMapper">

	<!-- 도서 목록 -->
	<select id="getBooksByCondition" resultType="com.fort4.dto.BookDTO">
	  SELECT b.*, c.name AS category_name
	  FROM books b
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.is_deleted = 0
	  <if test="keyword != null and keyword != ''">
	    AND b.title LIKE CONCAT('%', #{keyword}, '%')
	  </if>
	  <if test="categoryId != null">
	    AND b.category_id = #{categoryId}
	  </if>
	  ORDER BY 
	    <choose>
	      <when test="sort == 'title'">b.title</when>
	      <when test="sort == 'pubDate'">b.pub_date</when>
	      <otherwise>b.book_id</otherwise>
	    </choose>
	    <choose>
	      <when test="order == 'asc'">ASC</when>
	      <otherwise>DESC</otherwise>
	    </choose>
	<if test="start != null and size != null">
  		LIMIT #{start}, #{size}
	</if>
	</select>

	<!-- 전체 개수(페이징용) -->
	<select id="countBooksByCondition" resultType="int">
	  SELECT COUNT(*)
	  FROM books
	  WHERE is_deleted = 0
	    <if test="keyword != null and keyword != ''">
	      AND title LIKE CONCAT('%', #{keyword}, '%')
	    </if>
	    <if test="categoryId != null">
	      AND category_id = #{categoryId}
	    </if>
	</select>

	<!-- 전체 도서 조회(논리삭제 제외) -->
	<select id="getAllBooks" resultType="com.fort4.dto.BookDTO">
	  SELECT b.*, c.name AS category_name
	  FROM books b
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.is_deleted = 0
	  ORDER BY b.book_id DESC
	</select>
	
	<!-- 전체 도서 조회(논리 삭제 포함) -->
	<select id="getAllBooksIncludingDeleted" resultType="com.fort4.dto.BookDTO">
	  SELECT * FROM books
	</select>
	
	<!-- 단일 도서 조회(도서 상세 페이지) -->
	<select id="getBookById" resultType="com.fort4.dto.BookDTO">
	  SELECT b.*, c.name AS category_name
	  FROM books b
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.book_id = #{bookId} AND b.is_deleted = 0
	</select>
	
	<!-- 특정 유저가 대여한 모든 도서 목록 -->
	<select id="getBooksByUser" resultType="com.fort4.dto.BookDTO">
	  SELECT 
	    b.book_id, b.title, b.author, b.publisher,
	    b.pub_date, b.image_url, b.quantity, b.price,
	    b.category_id, b.is_deleted, c.name AS category_name
	  FROM books b
	  JOIN rental r ON b.book_id = r.book_id
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.is_deleted = 0
	    AND r.username = #{username}
	  ORDER BY r.rental_date DESC
	</select>
	
	
	<!-- 추천 도서 (대여 Top 5) -->
	<select id="getTopRentedBooks" resultType="com.fort4.dto.BookDTO">
	  SELECT b.book_id, b.title, b.author, b.image_url, c.name AS category_name
	  FROM books b
	  JOIN rental r ON b.book_id = r.book_id
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.is_deleted = 0
	  GROUP BY b.book_id
	  ORDER BY COUNT(*) DESC
	  LIMIT 5
	</select>
	
	<!-- 최신 도서 (메인용) -->
	<select id="getLatestBooks" resultType="com.fort4.dto.BookDTO">
	  SELECT b.book_id, b.title, b.author, b.image_url, c.name AS category_name, b.pub_date
	  FROM books b
	  LEFT JOIN category c ON b.category_id = c.category_id
	  WHERE b.is_deleted = 0
	  ORDER BY b.pub_date DESC
	  LIMIT 10
	</select>
	
	<!-- 도서 등록 -->
	<insert id="insertBook" parameterType="com.fort4.dto.BookDTO">
	  INSERT INTO books (
	    title, author, publisher, pub_date, image_url,
	    quantity, price, category_id
	  )
	  VALUES (
	    #{title}, #{author}, #{publisher}, #{pubDate}, #{imageUrl},
	    #{quantity}, #{price}, #{categoryId}
	  )
	</insert>
	
	<!-- 도서 수정 -->
	<update id="updateBook" parameterType="com.fort4.dto.BookDTO">
	  UPDATE books
	  SET title = #{title},
	      author = #{author},
	      publisher = #{publisher},
	      pub_date = #{pubDate},
	      image_url = #{imageUrl},
	      quantity = #{quantity},
	      price = #{price},
	      category_id = #{categoryId}
	  WHERE book_id = #{bookId}
	</update>
	
	<!-- 도서 논리삭제 - 삭제된 도서 재요청시 동작X하게 -->
	<update id="softDeleteBook" parameterType="int">
	  UPDATE books
	  SET is_deleted = 1,
	      deleted_at = NOW()
	  WHERE book_id = #{bookId}
	</update>
	<!-- 도서 삭제(논리삭제 아니고 레알 delete임) -->
	<delete id="deleteBook" parameterType="int">
	  DELETE FROM books
	  WHERE book_id = #{bookId}
	</delete>
	<!-- 논리삭제된 도서 조회 -->
	<select id="getDeletedBooks" resultType="com.fort4.dto.BookDTO">
	  SELECT * FROM books
	  WHERE is_deleted = 1
	</select>
	<!-- 복구 처리 -->
	<update id="restoreBook" parameterType="int">
	  UPDATE books
	  SET is_deleted = 0,
	    deleted_at = NULL
	  WHERE book_id = #{bookId}
	</update>

	<!-- 도서 수량 차감 -->
	<update id="decreaseQuantity">
	  UPDATE books
	  SET quantity = quantity - 1
	  WHERE book_id = #{bookId}
	    AND quantity > 0
	</update>
	
	<!-- 도서 수량 증가 -->
	<update id="increaseQuantity">
	  UPDATE books
	  SET quantity = quantity + 1
	  WHERE book_id = #{bookId}
	</update>
	
	<!-- 도서 이미지 URL 업데이트 -->
	<update id="updateImageUrl" parameterType="map">
	  UPDATE books
	  SET image_url = #{imageUrl}
	  WHERE book_id = #{bookId}
	</update>

</mapper>

