<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fort4.mapper.RentalMapper">
  <!-- TOP대여 수 -->
  <select id="getTopRentedBooks" resultType="com.fort4.dto.BookDTO">
    SELECT b.book_id, b.title, b.author, b.image_url, c.name AS category_name
    FROM books b
    JOIN rental r ON b.book_id = r.book_id
    LEFT JOIN category c ON b.category_id = c.category_id
    WHERE b.is_deleted = 0
    GROUP BY b.book_id
    ORDER BY COUNT(*) DESC
    LIMIT 5
  </select>

  <!-- 반납 처리 -->
  <update id="updateIsReturnedToReturned">
    UPDATE rental
    SET is_returned = 'returned'
    WHERE rental_id = #{rentalId}
  </update>

  <!-- 대여 연장 처리 -->
  <update id="extendReturnDateByRentalId">
	UPDATE rental
	SET return_date = DATE_ADD(return_date, INTERVAL 7 DAY)
	WHERE rental_id = #{rentalId}
  </update>
  
  <!-- 도서 대여 중 개수 -->
  <select id="countRentedByBookId" resultType="int">
    SELECT COUNT(*)
    FROM rental
    WHERE book_id = #{bookId}
      AND is_returned = 'rented'
  </select>
  
  <!-- 대여 상태 확인 -->
  <select id="countRentedBooksByBookId" resultType="int">
	SELECT COUNT(*)
	FROM rental
	WHERE book_id = #{bookId}
	AND is_returned = 'rented'
  </select>
  
  <!-- 특정 사용자의 대여기록 조회 -->
  <select id="findRentalByBookAndUser" resultType="com.fort4.dto.RentalDTO">
	SELECT *
	FROM rental
	WHERE book_id = #{bookId}
	AND username = #{username}
	ORDER BY rental_date DESC
	LIMIT 1
  </select>
  
  <!-- 도서 대여 수(관리자 통계용) -->
  <select id="countRentedBooks" resultType="int">
    SELECT COUNT(*) FROM rental WHERE is_returned = 'rented'
  </select>
  
  

  

</mapper>

