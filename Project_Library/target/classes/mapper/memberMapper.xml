<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fort4.mapper.MemberMapper">
	
	<!-- 아이디 중복 확인 -->
	<select id="checkId" resultType="int">
		SELECT COUNT(*) FROM member 
		WHERE username = #{username}
		AND is_deleted = false
	</select>
	
	<!-- 아이디 확인 -->
	<select id="findByUsername" parameterType="string" resultType="MemberDTO">
	  SELECT * FROM member
	  WHERE username = #{username}
	</select>
	
	<!-- 회원 가입 -->
	<insert id="insertMember">
	    INSERT INTO member (username, password, name, birth_date, role, is_deleted)
	    VALUES (#{username}, #{password}, #{name}, #{birthDate}, 'user', 0)
	</insert>

	<!-- 아이디 비밀번호 확인 -->
	<select id="findByUsernameAndPassword" resultType="MemberDTO">
	  SELECT * FROM member
	  WHERE username = #{username} AND password = #{password} AND is_deleted = 0
	</select>
	
	<!-- 로그인 + 탈퇴(Update)한 회원은 불가능 하게 -->
    <select id="login" resultType="MemberDTO">
        SELECT * FROM member
        WHERE username = #{username}
        AND password = #{password}
        AND is_deleted = false
    </select>
    
    <!-- 비빌번호 업데이트 -->
    <update id="updatePassword">
	    UPDATE member
	    SET password = #{password}
	    WHERE username = #{username}
	</update>
	
	<!-- 전체 회원 목록(탈퇴 포함) -->
	<select id="getAllMembersWithDeleted" resultType="MemberDTO">
	    SELECT *
	    FROM member
	</select>
	
	<!-- 회원 찾기 -->
	<select id="searchMembers" parameterType="com.fort4.dto.MemberSearchCondition" resultType="com.fort4.dto.MemberDTO">
	    SELECT *
	    FROM member
	    WHERE 1=1
	    <if test="cond.keyword != null and cond.keyword != ''">
	        AND (username LIKE CONCAT('%', #{cond.keyword}, '%')
	         OR name LIKE CONCAT('%', #{cond.keyword}, '%'))
	    </if>
	    <if test="cond.role != null and cond.role != ''">
	        AND role = #{cond.role}
	    </if>
	    <if test="cond.status == 'active'">
	        AND is_deleted = 0
	    </if>
	    <if test="cond.status == 'deleted'">
	        AND is_deleted = 1
	    </if>
	</select>
	
	<!-- 포인트 조정 -->
	<update id="adjustPoints">
	    UPDATE member
	    SET points = points + #{points}
	    WHERE username = #{username}
	</update>
	
	<!-- 회원 탈퇴(논리) -->
	<update id="softDeleteMember">
	    UPDATE member
	    SET is_deleted = 1,
	        deleted_at = #{deletedAt}
	    WHERE username = #{username}
	</update>

	<!-- 계정 찾기 -->
	<select id="findUsername" resultType="string">
	    SELECT username
	    FROM member
	    WHERE name = #{name}
	      AND birth_date = #{birthDate}
	      AND is_deleted = false
	</select>
	
	<!-- 관리자 통계용 -->
	<select id="countTotalMembers" resultType="int">
	    SELECT COUNT(*) FROM member
	</select>
	
	<select id="countUserMembers" resultType="int">
	    SELECT COUNT(*) FROM member WHERE role = 'user'
	</select>
	
	<select id="countAdminMembers" resultType="int">
	    SELECT COUNT(*) FROM member WHERE role = 'admin'
	</select>
	
	<select id="countDeletedMembers" resultType="int">
	    SELECT COUNT(*) FROM member WHERE is_deleted = 1
	</select>

	
    
</mapper>
